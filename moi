#!/bin/bash
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

xoa_ipv6() {
    echo "Xoá Tất Cả IPv6..."
    ip -6 addr flush dev eth0
    ip -6 addr flush dev ens33
}

# Gọi hàm xoá IPv6
xoa_ipv6


# Cài đặt các gói cần thiết
yum install make wget curl jq git iptables-services -y

# Lấy tên interface mạng
NETWORK_INTERFACE_NAME=$(ip route get 8.8.8.8 | sed -nr 's/.*dev ([^\ ]+).*/\1/p')
echo "MTU=1500" >> /etc/sysconfig/network-scripts/ifcfg-$NETWORK_INTERFACE_NAME

# Kiểm tra hệ thống có sử dụng YUM hay không
YUM=$(which yum)

if [ "$YUM" ]; then
    echo > /etc/sysctl.conf
    tee -a /etc/sysctl.conf <<EOF
net.ipv6.conf.default.disable_ipv6 = 0
net.ipv6.conf.all.disable_ipv6 = 0
EOF
    sysctl -p

    interfaces=$(ip -o link show | awk -F': ' '{print $2}')
    IPC=$(curl -4 -s icanhazip.com | cut -d"." -f3)
    IPD=$(curl -4 -s icanhazip.com | cut -d"." -f4)
    for iface in $interfaces; do
        if [ $IPC == 4 ]; then
            tee -a /etc/sysconfig/network-scripts/ifcfg-$iface <<-EOF
IPV6INIT=yes
IPV6_AUTOCONF=no
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
IPV6_ADDR_GEN_MODE=stable-privacy
IPV6ADDR=2403:6a40:0:40::$IPD:0000/64
IPV6_DEFAULTGW=2403:6a40:0:40::1
EOF
        elif [ $IPC == 5 ]; then
            tee -a /etc/sysconfig/network-scripts/ifcfg-$iface <<-EOF
IPV6INIT=yes
IPV6_AUTOCONF=no
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
IPV6_ADDR_GEN_MODE=stable-privacy
IPV6ADDR=2403:6a40:0:41::$IPD:0000/64
IPV6_DEFAULTGW=2403:6a40:0:41::1
EOF
        elif [ $IPC == 244 ]; then
            tee -a /etc/sysconfig/network-scripts/ifcfg-$iface <<-EOF
IPV6INIT=yes
IPV6_AUTOCONF=no
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
IPV6_ADDR_GEN_MODE=stable-privacy
IPV6ADDR=2403:6a40:2000:244::$IPD:0000/64
IPV6_DEFAULTGW=2403:6a40:2000:244::1
EOF
        else
            tee -a /etc/sysconfig/network-scripts/ifcfg-$iface <<-EOF
IPV6INIT=yes
IPV6_AUTOCONF=no
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
IPV6_ADDR_GEN_MODE=stable-privacy
IPV6ADDR=2403:6a40:0:$IPC::$IPD:0000/64
IPV6_DEFAULTGW=2403:6a40:0:$IPC::1
EOF
        fi
    done

    service network restart

# Nếu không sử dụng YUM thì kiểm tra sử dụng apt (Ubuntu)
else
    ipv4=$(curl -4 -s icanhazip.com)
    IPC=$(curl -4 -s icanhazip.com | cut -d"." -f3)
    IPD=$(curl -4 -s icanhazip.com | cut -d"." -f4)
    INT=$(ls /sys/class/net | grep e)
    if [ "$IPC" = "4" ]; then
        IPV6_ADDRESS="2403:6a40:0:40::$IPD:0000/64"
        GATEWAY="2403:6a40:0:40::1"
    elif [ "$IPC" = "5" ]; then
        IPV6_ADDRESS="2403:6a40:0:41::$IPD:0000/64"
        GATEWAY="2403:6a40:0:41::1"
    elif [ "$IPC" = "244" ]; then
        IPV6_ADDRESS="2403:6a40:2000:244::$IPD:0000/64"
        GATEWAY="2403:6a40:2000:244::1"
    else
        IPV6_ADDRESS="2403:6a40:0:$IPC::$IPD:0000/64"
        GATEWAY="2403:6a40:0:$IPC::1"
    fi
    interface_name="$INT"  # Tên giao diện mạng
    ipv6_address="$IPV6_ADDRESS"
    gateway6_address="$GATEWAY"
    netplan_path="/etc/netplan/50-cloud-init.yaml"  # Đường dẫn tập tin cấu hình Netplan

    netplan_config=$(cat "$netplan_path")
    new_netplan_config=$(sed "/gateway4:/i \ \ \ \ \ \ \ \ \ \ \ \ - $ipv6_address" <<< "$netplan_config")
    new_netplan_config=$(sed "/gateway4:.*/a \ \ \ \ \ \ \ \ \ \ \ \ gateway6: $gateway6_address" <<< "$new_netplan_config")

    echo "$new_netplan_config" > "$netplan_path"

    sudo netplan apply
fi

echo 'IPv6 đã được cấu hình thành công!'

auto_detect_interface() {
    IFCFG=$(ip -o link show | awk -F': ' '$3 !~ /lo|vir|^[^0-9]/ {print $2; exit}')
}

WORKDIR="/proxy"
WORKDATA="${WORKDIR}/data.txt"

random() {
    tr </dev/urandom -dc A-Za-z0-9 | head -c5
    echo
}

array=(1 2 3 4 5 6 7 8 9 0 a b c d e f)
gen64() {
    ip64() {
        echo "${array[$RANDOM % 16]}${array[$RANDOM % 16]}${array[$RANDOM % 16]}${array[$RANDOM % 16]}"
    }
    echo "$1:$(ip64):$(ip64):$(ip64):$(ip64)"
}

install_dependencies() {
    OS=$(awk -F= '/^NAME/{print $2}' /etc/os-release)
    echo "Detected OS: $OS"
    
    if [[ "$OS" == *"CentOS"* ]] || [[ "$OS" == *"AlmaLinux"* ]]; then
        yum update -y
        yum install -y wget gcc make
    elif [[ "$OS" == *"Ubuntu"* ]]; then
        apt-get update -y
        apt-get install -y wget gcc make
    else
        echo "Unsupported OS. Exiting."
        exit 1
    fi
}

install_3proxy() {
    echo "installing 3proxy"
    URL="https://github.com/z3APA3A/3proxy/archive/refs/tags/0.8.13.tar.gz"
    wget -qO- $URL | tar -xzf-
    cd $WORKDIR/3proxy-0.8.13
    make -f Makefile.Linux
    mkdir -p /usr/local/etc/3proxy/{bin,logs,stat}
    cp src/3proxy /usr/local/etc/3proxy/bin/
    cd $WORKDIR
}

gen_3proxy() {
    cat <<EOF
daemon
maxconn 10000
nserver 1.1.1.1
nserver 8.8.4.4
nserver 2001:4860:4860::8888
nserver 2001:4860:4860::8844
nscache 65536
timeouts 1 5 30 60 180 1800 15 60
setgid 65535
setuid 65535
stacksize 6291456 
flush
auth none

$(awk -F "/" '{print "" \
"allow *" $1 "\n" \
"proxy -6 -n -a -p" $4 " -i" $3 " -e"$5"\n" \
"flush\n"}' ${WORKDATA})
EOF
}

gen_proxy_file_for_user() {
    cat >proxy.txt <<EOF
$(awk -F "/" '{print $3 ":" $4 }' ${WORKDATA})
EOF
}

gen_data() {
    seq $FIRST_PORT $LAST_PORT | while read port; do
        echo "//$IP4/$port/$(gen64 $IP6)"
    done
}

gen_ifconfig() {
    cat <<EOF
$(awk -F "/" '{print "ifconfig $IFCFG inet6 add " $5 "/64"}' ${WORKDATA})
EOF
}

# Cấu hình hệ thống để khởi động lại proxy khi bị tắt
setup_proxy_restart() {
    cat <<EOF > /etc/systemd/system/3proxy.service
[Unit]
Description=3Proxy Proxy Server
After=network.target

[Service]
ExecStart=/usr/local/etc/3proxy/bin/3proxy /usr/local/etc/3proxy/3proxy.cfg
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF

    systemctl daemon-reload
    systemctl enable 3proxy.service
    systemctl start 3proxy.service
}

echo "installing dependencies"
install_dependencies

echo "installing apps"
install_3proxy

echo "working folder = $WORKDIR"
mkdir -p $WORKDIR && cd $WORKDIR

IP4=$(curl -4 -s icanhazip.com)
IP6=$(curl -6 -s icanhazip.com | cut -f1-4 -d':')

echo "Internal IP = ${IP4}. External sub for IP6 = ${IP6}"

FIRST_PORT=22000
LAST_PORT=22700

gen_data >$WORKDIR/data.txt
gen_ifconfig >$WORKDIR/boot_ifconfig.sh
chmod +x boot_*.sh /etc/rc.d/rc.local

gen_3proxy >/usr/local/etc/3proxy/3proxy.cfg

cat >>/etc/rc.d/rc.local <<EOF
bash ${WORKDIR}/boot_ifconfig.sh
ulimit -n 10048
EOF

chmod +x /etc/rc.d/rc.local
systemctl enable rc-local
systemctl start rc-local

gen_proxy_file_for_user

# Thiết lập proxy tự khởi động lại nếu bị tắt
setup_proxy_restart

rm -rf /root/setup.sh
rm -rf /root/3proxy-3proxy-0.8.13

echo "Starting Proxy"

# Cấu hình tối ưu hệ thống cho 3proxy
echo "fs.file-max = 1000000" | sudo tee -a /etc/sysctl.conf
echo "net.ipv4.ip_local_port_range = 1024 65000" | sudo tee -a /etc/sysctl.conf
echo "net.ipv4.tcp_fin_timeout = 30" | sudo tee -a /etc/sysctl.conf
echo "net.core.somaxconn = 4096" | sudo tee -a /etc/sysctl.conf
echo "net.core.netdev_max_backlog = 4096" | sudo tee -a /etc/sysctl.conf

# Giới hạn file descriptor
echo "* hard nofile 999999" | sudo tee -a /etc/security/limits.conf
echo "* soft nofile 999999" | sudo tee -a /etc/security/limits.conf

# Đặt mô tả cho 3proxy
sudo sed -i "/Description=/c\Description=3 Proxy optimized by VLT PRO" /etc/sysctl.conf

# Thiết lập giới hạn file descriptor và process
sudo sed -i "/LimitNOFILE=/c\LimitNOFILE=9999999" /etc/sysctl.conf
sudo sed -i "/LimitNPROC=/c\LimitNPROC=9999999" /etc/sysctl.conf

sudo sysctl -p

echo "Tổng số IPv6 hiện tại:"
ip -6 addr | grep inet6 | wc -l
download_proxy
