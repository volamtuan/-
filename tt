#!/bin/bash
###Script Proxy

# Final vars
WORKDIR="/etc/lev/"
LOGFILE="/var/log/levip6.log"

cat << "EOF"
==========================================================================
        IPv6 All In One VPS Server
==========================================================================

EOF

echo -e "Đang cài đặt thư viện và khởi tạo....."

# Function to get network card
getNetworkCard() {
  network_card=$(ip -o link show | awk '{print $2,$9}' | grep ens | cut -d: -f1)
  if [[ -z "$network_card" ]]; then
    network_card=$(ip -o link show | awk '{print $2,$9}' | grep enp | cut -d: -f1)
  fi
  if [[ -z "$network_card" ]]; then
    network_card=$(ip -o link show | awk '{print $2,$9}' | grep eno | cut -d: -f1)
  fi
  if [[ -z "$network_card" ]]; then
    network_card="eth0"
  fi
}

# Function to get OS info
getOSInfo() {
  if [[ -f /etc/os-release ]]; then
    . /etc/os-release
    OS=$NAME
    VER=$VERSION_ID
  elif type lsb_release >/dev/null 2>&1; then
    OS=$(lsb_release -si)
    VER=$(lsb_release -sr)
  elif [[ -f /etc/lsb-release ]]; then
    . /etc/lsb-release
    OS=$DISTRIB_ID
    VER=$DISTRIB_RELEASE
  elif [[ -f /etc/debian_version ]]; then
    OS=Debian
    VER=$(cat /etc/debian_version)
  elif [[ -f /etc/SuSe-release ]]; then
    OS=$(cat /etc/SuSe-release | head -n 1)
  elif [[ -f /etc/redhat-release ]]; then
    OS=$(cat /etc/redhat-release)
  else
    OS=$(uname -s)
    VER=$(uname -r)
  fi
}

getNetworkCard
getOSInfo

# Function to update IPv6 settings
updateIPv6Settings() {
  if [[ "$OS" = "CentOS Linux" ]]; then
    echo "CentOS Linux detected."
    # Modify this function according to CentOS IPv6 settings update
    # Example:
    # if grep -q IPV6ADDR_SECONDARIES "/etc/sysconfig/network-scripts/ifcfg-${network_card}"; then
    #   # Update IPv6 settings here
    # else
    #   # Configure IPv6 settings here
    # fi
  else
    echo "Unsupported OS."
  fi
}

# Function to create IPv6 proxy
createIPv6Proxy() {
  echo -n "Nhập số lượng proxy IPv6 cần tạo: "
  read proxyCount
  echo ""

  if [[ "$proxyCount" =~ ^[0-9]+$ ]]; then
    for ((i=1; i<=$proxyCount; i++)); do
      randomPort=$(( ( RANDOM % 40000 )  + 10000 ))
      ipv6Proxy="[${ipv6}]:${randomPort}"
      echo "$ipv6Proxy" >> "$WORKDIR/proxy_ipv6.txt"
      echo "Proxy IPv6 $i: $ipv6Proxy"
    done
    echo "Đã tạo thành công $proxyCount proxy IPv6."
  else
    echo "Số lượng proxy không hợp lệ!"
  fi
}

# Main menu
echo "Menu chính:"
echo ""
echo "1 - Tự động cập nhật địa chỉ IPv6 mới"
echo "2 - Hiển thị IPv6 hiện tại"
echo "3 - Tạo proxy IPv6"
echo "0 - Thoát"
echo ""
echo -n "Nhập lựa chọn của bạn: "
read selection
echo ""

# Process the selection
case $selection in
  1)
    echo "Đang lấy IPv6 mới..."
    # Replace this with your method to retrieve IPv6 address
    # Example: wget -q -O "$WORKDATA" "$UPDATE_URL" && source "$WORKDATA"
    # Ensure you set $ipv6 and $ipv6mask with retrieved values
    if [[ -z "$ipv6" ]]; then
      echo "Không thể lấy được địa chỉ IPv6 mới!"
    else
      echo "Đã lấy được địa chỉ IPv6 mới: $ipv6/$ipv6mask"
      updateIPv6Settings
      systemctl restart network
      echo "IPv6 đã được cập nhật thành công!"
    fi
    ;;
  2)
    ipv6addr=$(ip addr show eth0 | grep 'pinet6 ' | awk '{print $2}' | cut -f1-4 -d':' | grep '^2')
    echo "IPv6 hiện tại của bạn là: $ipv6addr"
    ;;
  3)
    createIPv6Proxy
    ;;
  0)
    echo "Kết thúc!"
    ;;
  *)
    echo "Xin hãy chọn lựa chính xác!"
    ;;
esac
